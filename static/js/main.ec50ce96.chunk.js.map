{"version":3,"sources":["actions/contact.js","components/AddForm.js","components/Action.js","actions/search.js","components/EditForm.js","components/ContactAction.js","actions/edit.js","components/Container.js","App.js","index.js","reducers/contact.js","reducers/editform.js","reducers/search.js","selector/search.js"],"names":["addAction","data","type","setAction","payload","AddForm","onadd","e","preventDefault","name","_this","getName","value","number","getNumber","props","dispatch","target","elements","_this2","this","react_default","a","createElement","className","onSubmit","ref","input","placeholder","onClick","React","Component","connect","state","contactstate","editform","matched","search","Action","components_AddForm","getSearch","onChange","text","contacts","searchAction","console","log","addform","document","getElementsByClassName","length","map","contact","i","key","EditForm","index","editAction","defaultValue","ContactAction","Container","components_ContactAction","edit","components_EditForm","Contacts","componentDidMount","JSON","parse","localStorage","getItem","error","componentDidUpdate","prevProps","setItem","stringify","components_Action","components_Container","store","createStore","combineReducers","arguments","undefined","action","concat","Object","toConsumableArray","filter","item","newstate","includes","selectMatched","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.ec50ce96.chunk.js","sourcesContent":["export const addAction = (data) => ({ type: 'ADD_CONTACT', data })\nexport const deleteAction = (index) => ({type: 'DELETE_CONTACT', index})\nexport const editAction = (payload) => ({type: 'EDIT_CONTACT', payload})\nexport const setAction = (payload) => ({type: 'SET', payload})","import React from 'react'\nimport { addAction } from '../actions/contact'\nimport { connect } from 'react-redux'\nimport '../styles/AddForm.css'\n\nclass AddForm extends React.Component{\n    \n    onadd = (e) => {\n        e.preventDefault()\n        const name = this.getName.value;\n        const number = this.getNumber.value;\n\n        const data = {\n            name,\n            number\n        }\n\n        this.props.dispatch(addAction(data))\n\n        e.target.elements.name.value = ''\n        e.target.elements.number.value = ''\n\n    }\n    \n    render(){\n        return(\n            <div className=\"addform\">\n                <form\n                    onSubmit={this.onadd}\n                >\n                    <input type=\"text\" name=\"name\" ref={(input) => this.getName = input} placeholder=\"enter name\" />\n                    <input type=\"number\" name=\"number\" ref={(input) => this.getNumber = input} placeholder=\"enter number\" />\n\n                    <button onClick={\n                        (e) => {\n                            e.preventDefault()\n                        }\n                    }>\n                        Cancel\n                    </button>\n\n                    <button type='submit'>\n                        Add\n                    </button>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        contactstate: state.contactstate,\n        editform: state.editform,\n        matched: state.search\n    }\n}\n\n\nexport default connect(mapStateToProps)(AddForm);","import React from 'react'\nimport { searchAction } from '../actions/search'\nimport { connect } from 'react-redux'\nimport AddForm from './AddForm'\nimport '../styles/Action.css'\n\nclass Action extends React.Component {\n    \n    render(){\n        return(\n            <div className=\"action\">\n                <div >\n                    <AddForm />\n                    <div className=\"action-bar\">\n                        <input\n                            className=\"action-search\"\n                            type=\"text\"\n                            placeholder=\"search...\"\n                            ref={(input) => this.getSearch = input}\n                            onChange={\n                                (e) => {\n                                    const text = this.getSearch.value;\n                                    const payload = {\n                                        contacts: this.props.contactstate,\n                                        text\n                                    }\n                                    this.props.dispatch(searchAction(payload))\n                                    console.log(payload)\n\n                                }\n                            }\n                        />\n\n                        <button \n                            className=\"action-add\"\n                            onClick={\n                                (e) => {\n                                    e.preventDefault()\n                                    const addform = document.getElementsByClassName(\"addform\")\n                                    console.log(addform)\n                                    addform.className = \"hidden\";\n                                }\n                            }    \n                        >\n                            Add Contact\n                        </button>\n                    </div>\n                </div>\n\n                {\n                    this.props.matched.length > 0 ?\n                        (\n                            this.props.matched.map((contact, i) => (\n                                <div key={i} className=\"matched-contact\">\n                                    <p className=\"contact-name\">{contact.data.name}</p>\n                                    <p className=\"contact-number\">{contact.data.number}</p>\n                                </div>\n                            ))\n                        ) : (\n                            <p className=\"error-messege\">no match found!</p>\n                        )\n                    // console.log(this.props.matched[0])\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(\"search state : \" + selectMatched(state.contactstate, state.search))\n\n    return {\n        contactstate: state.contactstate,\n        editform: state.editform,\n        matched: state.search\n    }\n}\n\n\nexport default connect(mapStateToProps)(Action);\n","export const searchAction = (payload) => ({ type: 'SEARCH', payload })","import React from 'react'\nimport { connect } from 'react-redux'\nimport { editAction } from '../actions/contact'\nimport '../styles/EditForm.css'\n\nclass EditForm extends React.Component{\n    render(){\n        return(\n            <form\n                className=\"edit-form\"\n                onSubmit={\n                    (e) => {\n                        e.preventDefault()\n                        const name = this.getName.value;\n                        const number = this.getNumber.value\n\n                        const payload = {\n                            data: {\n                                name,\n                                number\n                            },\n                            index: this.props.i\n                        }\n\n                        console.log(payload)\n\n                        this.props.dispatch(editAction(payload))\n\n                    }\n                }\n            >\n\n                <input type=\"text\" name=\"name\" placeholder=\"enter name\" defaultValue={this.props.contact.data.name} ref={(input) => this.getName = input} />\n                <input type=\"number\" name=\"number\" placeholder=\"enter number\" defaultValue={this.props.contact.data.number} ref={(input) => this.getNumber = input} />\n\n                <button className=\"cancel-button\">\n                    Cancel\n                </button>\n\n                <button type='submit' className=\"update-button\">\n                    Update\n                </button>\n\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(\"search state : \" + selectMatched(state.contactstate, state.search))\n\n    return {\n        contactstate: state.contactstate,\n        editform: state.editform,\n        matched: state.search\n    }\n}\n\n\nexport default connect(mapStateToProps)(EditForm);","import React from 'react'\nimport { connect } from 'react-redux'\nimport { open } from '../actions/edit'\nimport { deleteAction } from '../actions/contact'\nimport '../styles/ContactAction.css'\n\nclass ContactAction extends React.Component{\n    render(){\n        return(\n            <div className=\"contactAction\">\n                <button\n                    className=\"edit-button\" \n                    onClick={\n                    (e) => {\n                        e.preventDefault()\n                        console.log(\"editing \" + this.props.i)\n                        // console.log(\"app : \"+this.props.i)\n                        this.props.dispatch(open(this.props.i))\n                    }\n                } >\n                    Edit\n                </button>\n\n                <button \n                    className=\"delete-button\"\n                    onClick={\n                    (e) => {\n                        e.preventDefault()\n                        console.log(\"deleting \" + this.props.i)\n                        this.props.dispatch(deleteAction(this.props.i))\n                    }\n                } >\n                    Delete\n                </button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        contactstate: state.contactstate,\n        editform: state.editform,\n        matched: state.search\n    }\n}\n\n\nexport default connect(mapStateToProps)(ContactAction);\n","export const open = (index) => ({type:'OPEN_FORM', index})\nexport const close = (index) => ({ type: 'CLOSE_FORM', index })","import React from 'react'\nimport { connect } from 'react-redux'\nimport EditForm from './EditForm'\nimport ContactAction from './ContactAction'\nimport '../styles/Container.css'\n\nclass Container extends React.Component {\n    render(){\n        return(\n            <div className=\"container\">\n                {\n                    this.props.contactstate.length > 0 ?\n                        (\n                            this.props.contactstate.map((contact, i) => (\n                                <div key={i} className=\"container-single\">\n\n                                    <div className=\"contact-detail\">\n                                        <p className=\"contact-name\">{contact.data.name}</p>\n                                        <p className=\"contact-number\">{contact.data.number}</p>\n                                    </div>\n\n                                    <ContactAction i={i}/>\n\n                                    {\n                                        this.props.contactstate[i].edit &&\n                                        <EditForm contact={contact} i={i}/>\n                                    }\n                                </div>\n                            ))\n\n\n                        )\n                        : (<p className=\"error-messege\">No Contact Available</p>)\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(\"search state : \" + selectMatched(state.contactstate, state.search))\n\n    return {\n        contactstate: state.contactstate,\n        editform: state.editform,\n        matched: state.search\n    }\n}\n\n\nexport default connect(mapStateToProps)(Container);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {setAction} from './actions/contact'\nimport Action from './components/Action'\nimport Container from './components/Container'\nimport './App.css'\n\nclass Contacts extends React.Component {\n\n    // when component mounted for the first time\n    componentDidMount = () => {\n        console.log(\"component mounted!!\")\n        try {\n            const contacts = JSON.parse(localStorage.getItem('contacts'))\n            if (contacts) {\n                this.props.dispatch(setAction(contacts))\n            }\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    //when component is updated\n    componentDidUpdate = (prevProps) => {\n        if (prevProps.contactstate.length !== this.props.contactstate.length) {\n            localStorage.setItem('contacts', JSON.stringify(this.props.contactstate))\n        }\n\n        console.log(\"component updated!!\")\n    }\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <h1>Contact App</h1>\n                </header>\n                <Action />\n                <Container />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(\"search state : \" + selectMatched(state.contactstate, state.search))\n    \n    return {\n        contactstate: state.contactstate,\n        editform: state.editform,\n        matched: state.search\n    }\n}\n\n\nexport default connect(mapStateToProps)(Contacts);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers } from 'redux'\nimport {Provider} from 'react-redux'\nimport contactReducer from './reducers/contact'\nimport editform from './reducers/editform'\nimport search from './reducers/search'\nimport App from './App';\n\nconst store = createStore(\n    combineReducers({\n        contactstate: contactReducer,\n        editform: editform,\n        search: search\n    })\n);\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n","export default (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_CONTACT':\n            console.log(\"add action dispatched\")\n            return [...state, {data: action.data, edit : false}]\n        case 'DELETE_CONTACT':\n            console.log(\"delete action dispatched\")\n            return state.filter((item, index) => index !== action.index)\n        case 'OPEN_FORM':\n            var newstate = []\n            for (let index = 0; index < state.length; index++) {\n                if (index === action.index) {\n                    newstate[index] = {data: state[index].data, edit:true}\n                } else {\n                    newstate[index] = state[index]\n                }\n            }\n            return newstate\n\n        case 'EDIT_CONTACT':\n            console.log(\"edit action dispatched\")\n            console.log(\"payload\"+action.payload.data)\n            newstate = []\n            for (let index = 0; index < state.length; index++) {\n                if (index === action.payload.index) {\n                    newstate[index] = { data: action.payload.data, edit: false }\n                } else {\n                    newstate[index] = state[index]\n                }\n            }\n            console.log(newstate)\n            return newstate\n        case 'SET':\n            return action.payload\n        default:\n            return state\n    }\n};","export default (state = false, action) => {\n    switch (action.type) {\n        case 'EDIT':\n            console.log(\"edit action despatched\")\n            return true;\n        default:\n            return state\n    }\n};","import selectMatched from '../selector/search'\nexport default (state = [], action) => {\n    switch (action.type) {\n        case 'SEARCH':\n            const newstate = selectMatched(action.payload.contacts, action.payload.text)\n            console.log(newstate)\n            return newstate\n        default:\n            return state\n    }\n}","export default (contacts, text = ' ') => {\n    const matched = contacts.filter((contact) => contact.data.name.includes(text))\n    return text === ''?[]:matched\n}"],"sourceRoot":""}